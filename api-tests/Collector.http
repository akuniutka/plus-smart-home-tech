### Collect climate sensor event
POST http://localhost:8080/events/sensors
Content-Type: application/json

{
  "id": "sensor.climate.1",
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "temperatureC": 20,
  "humidity": 64,
  "co2Level": 632,
  "type": "CLIMATE_SENSOR_EVENT"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect light sensor event
POST http://localhost:8080/events/sensors
Content-Type: application/json

{
  "id": "sensor.light.2",
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "linkQuality": 75,
  "luminosity": 59,
  "type": "LIGHT_SENSOR_EVENT"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect motion sensor event
POST http://localhost:8080/events/sensors
Content-Type: application/json

{
  "id": "sensor.motion.3",
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "linkQuality": 95,
  "motion": false,
  "voltage": 9,
  "type": "MOTION_SENSOR_EVENT"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect switch sensor event
POST http://localhost:8080/events/sensors
Content-Type: application/json

{
  "id": "sensor.switch.4",
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "state": true,
  "type": "SWITCH_SENSOR_EVENT"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect temperature sensor event
POST http://localhost:8080/events/sensors
Content-Type: application/json

{
  "id": "sensor.temperature.5",
  "hubId": "hub-3",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "temperatureC": 20,
  "temperatureF": 68,
  "type": "TEMPERATURE_SENSOR_EVENT"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Reject malformed light sensor event
POST http://localhost:8080/events/sensors
Content-Type: application/json

{
  "id": "sensor.light.6",
  "hubId": " ",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "linkQuality": 75,
  "luminosity": 59,
  "type": "LIGHT_SENSOR_EVENT"
}

> {%
    client.test("Response code 400", function() {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

### Collect add device event
POST http://localhost:8080/events/hubs
Content-Type: application/json

{
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "id": "sensor.light.7",
  "deviceType": "LIGHT_SENSOR",
  "type": "DEVICE_ADDED"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect remove device event
POST http://localhost:8080/events/hubs
Content-Type: application/json

{
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "id": "sensor.light.8",
  "type": "DEVICE_REMOVED"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect add scenario event
POST http://localhost:8080/events/hubs
Content-Type: application/json

{
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "name": "scenario #1",
  "conditions": [
    {
      "sensorId": "sensor.light.2",
      "type": "SWITCH",
      "operation": "EQUALS",
      "value": 0
    }
  ],
  "actions": [
    {
      "sensorId": "sensor.light.2",
      "type": "SET_VALUE",
      "value": 1
    }
  ],
  "type": "SCENARIO_ADDED"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Collect remove scenario event
POST http://localhost:8080/events/hubs
Content-Type: application/json

{
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "name": "scenario #1",
  "type": "SCENARIO_REMOVED"
}

> {%
    client.test("Response code 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Reject malformed add scenario event
POST http://localhost:8080/events/hubs
Content-Type: application/json

{
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "name": "scenario #1",
  "conditions": [
    {
      "sensorId": "sensor.light.3",
      "type": "SWITCH",
      "operation": "EQUALS",
      "value": 0
    }
  ],
  "actions": [
    {
      "sensorId": " ",
      "type": "SET_VALUE",
      "value": 1
    }
  ],
  "type": "SCENARIO_ADDED"
}

> {%
    client.test("Response code 400", function() {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

### Reject another malformed add scenario event
POST http://localhost:8080/events/hubs
Content-Type: application/json

{
  "hubId": "hub-2",
  "timestamp": "2024-08-06T15:11:24.157Z",
  "name": "  ",
  "conditions": [
    {
      "sensorId": "sensor.light.3",
      "type": "SWITCH",
      "operation": "EQUALS",
      "value": 0
    }
  ],
  "actions": [
    {
      "sensorId": " ",
      "type": "SET_VALUE",
      "value": 1
    }
  ],
  "type": "SCENARIO_ADDED"
}

> {%
    client.test("Response code 400", function() {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

###

